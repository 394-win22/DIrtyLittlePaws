{"ast":null,"code":"import canUseDOM from './canUseDOM';\n\nvar fallback = function fallback(context, node) {\n  if (!node) return false;\n\n  do {\n    if (node === context) {\n      return true;\n    }\n  } while (node.parentNode && (node = node.parentNode));\n\n  return false;\n}; // HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\n\n\nvar contains = function contains(context, node) {\n  if (!node) return false;\n\n  if (context.contains) {\n    return context.contains(node);\n  } else if (context.compareDocumentPosition) {\n    return context === node || !!(context.compareDocumentPosition(node) & 16);\n  }\n\n  return fallback(context, node);\n};\n\nexport default (function () {\n  return canUseDOM ? contains : fallback;\n})();","map":{"version":3,"sources":["C:/Users/Sebastian/Documents/code projects/DIrtyLittlePaws/node_modules/dom-lib/esm/contains.js"],"names":["canUseDOM","fallback","context","node","parentNode","contains","compareDocumentPosition"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;AAC9C,MAAI,CAACA,IAAL,EAAW,OAAO,KAAP;;AAEX,KAAG;AACD,QAAIA,IAAI,KAAKD,OAAb,EAAsB;AACpB,aAAO,IAAP;AACD;AACF,GAJD,QAISC,IAAI,CAACC,UAAL,KAAoBD,IAAI,GAAGA,IAAI,CAACC,UAAhC,CAJT;;AAMA,SAAO,KAAP;AACD,CAVD,C,CAUG;AACH;;;AAGA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBH,OAAlB,EAA2BC,IAA3B,EAAiC;AAC9C,MAAI,CAACA,IAAL,EAAW,OAAO,KAAP;;AAEX,MAAID,OAAO,CAACG,QAAZ,EAAsB;AACpB,WAAOH,OAAO,CAACG,QAAR,CAAiBF,IAAjB,CAAP;AACD,GAFD,MAEO,IAAID,OAAO,CAACI,uBAAZ,EAAqC;AAC1C,WAAOJ,OAAO,KAAKC,IAAZ,IAAoB,CAAC,EAAED,OAAO,CAACI,uBAAR,CAAgCH,IAAhC,IAAwC,EAA1C,CAA5B;AACD;;AAED,SAAOF,QAAQ,CAACC,OAAD,EAAUC,IAAV,CAAf;AACD,CAVD;;AAYA,eAAe,CAAC,YAAY;AAC1B,SAAOH,SAAS,GAAGK,QAAH,GAAcJ,QAA9B;AACD,CAFc,GAAf","sourcesContent":["import canUseDOM from './canUseDOM';\r\n\r\nvar fallback = function fallback(context, node) {\r\n  if (!node) return false;\r\n\r\n  do {\r\n    if (node === context) {\r\n      return true;\r\n    }\r\n  } while (node.parentNode && (node = node.parentNode));\r\n\r\n  return false;\r\n}; // HTML DOM and SVG DOM may have different support levels,\r\n// so we need to check on context instead of a document root element.\r\n\r\n\r\nvar contains = function contains(context, node) {\r\n  if (!node) return false;\r\n\r\n  if (context.contains) {\r\n    return context.contains(node);\r\n  } else if (context.compareDocumentPosition) {\r\n    return context === node || !!(context.compareDocumentPosition(node) & 16);\r\n  }\r\n\r\n  return fallback(context, node);\r\n};\r\n\r\nexport default (function () {\r\n  return canUseDOM ? contains : fallback;\r\n})();"]},"metadata":{},"sourceType":"module"}