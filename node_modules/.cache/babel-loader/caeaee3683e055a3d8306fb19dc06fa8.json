{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport uniq from 'lodash/uniq';\nimport remove from 'lodash/remove';\nimport slice from 'lodash/slice';\nimport { flattenTree } from '../utils/treeUtils';\n/**\r\n * Get all parents of a node\r\n * @param node\r\n */\n\nexport var getParents = function getParents(node) {\n  var parents = [];\n\n  if (!node.parent) {\n    return parents;\n  }\n\n  parents.push(node.parent);\n  parents = parents.concat(getParents(node.parent));\n  return parents;\n};\n/**\r\n * Check if any child nodes are selected.\r\n * @param node\r\n * @param value\r\n * @param itemKeys\r\n */\n\nexport var isSomeChildChecked = function isSomeChildChecked(node, value, itemKeys) {\n  var childrenKey = itemKeys.childrenKey,\n      valueKey = itemKeys.valueKey;\n\n  if (!node[childrenKey] || !value) {\n    return false;\n  }\n\n  return node[childrenKey].some(function (child) {\n    var _child$childrenKey;\n\n    if (value.some(function (n) {\n      return n === child[valueKey];\n    })) {\n      return true;\n    }\n\n    if ((_child$childrenKey = child[childrenKey]) !== null && _child$childrenKey !== void 0 && _child$childrenKey.length) {\n      return isSomeChildChecked(child, value, itemKeys);\n    }\n\n    return false;\n  });\n};\n/**\r\n * Check if the parent is selected.\r\n * @param node\r\n * @param value\r\n * @param itemKeys\r\n */\n\nexport var isSomeParentChecked = function isSomeParentChecked(node, value, itemKeys) {\n  var valueKey = itemKeys.valueKey;\n\n  if (!value) {\n    return false;\n  }\n\n  if (value.some(function (n) {\n    return n === node[valueKey];\n  })) {\n    return true;\n  }\n\n  if (node.parent) {\n    return isSomeParentChecked(node.parent, value, itemKeys);\n  }\n\n  return false;\n};\nexport var getOtherItemValuesByUnselectChild = function getOtherItemValuesByUnselectChild(itemNode, value, itemKeys) {\n  var valueKey = itemKeys.valueKey,\n      childrenKey = itemKeys.childrenKey;\n  var parentValues = [];\n  var itemValues = []; // Find the parent node of the current node by value\n\n  function findParent(item) {\n    parentValues.push(item[valueKey]);\n\n    if (value.some(function (v) {\n      return v === item[valueKey];\n    })) {\n      return item;\n    }\n\n    if (item.parent) {\n      var p = findParent(item.parent);\n\n      if (p) {\n        return p;\n      }\n    }\n\n    return null;\n  } // Get child nodes through parent node\n\n\n  function pushChildValue(item) {\n    if (!item[childrenKey]) {\n      return;\n    }\n\n    item[childrenKey].forEach(function (n) {\n      // Determine whether it is a direct parent\n      if (parentValues.some(function (v) {\n        return v === n[valueKey];\n      }) && n[childrenKey]) {\n        pushChildValue(n);\n      } else if (n[valueKey] !== itemNode[valueKey]) {\n        itemValues.push(n[valueKey]);\n      }\n    });\n  }\n\n  var parent = findParent(itemNode);\n\n  if (!parent) {\n    return [];\n  }\n\n  pushChildValue(parent);\n  return itemValues;\n};\n/**\r\n * Remove the values of all children.\r\n */\n\nexport var removeAllChildrenValue = function removeAllChildrenValue(value, item, itemKeys) {\n  var valueKey = itemKeys.valueKey,\n      childrenKey = itemKeys.childrenKey;\n  var removedValue = [];\n\n  if (!item[childrenKey]) {\n    return;\n  }\n\n  item[childrenKey].forEach(function (n) {\n    removedValue = removedValue.concat(remove(value, function (v) {\n      return v === n[valueKey];\n    }));\n\n    if (n[childrenKey]) {\n      removeAllChildrenValue(value, n, itemKeys);\n    }\n  });\n  return removedValue;\n};\n/**\r\n * A hook to flatten tree structure data\r\n * @param data\r\n */\n\nexport function useFlattenData(data, itemKeys) {\n  var childrenKey = itemKeys.childrenKey;\n\n  var _useState = useState(flattenTree(data)),\n      flattenData = _useState[0],\n      setFlattenData = _useState[1];\n\n  var addFlattenData = useCallback(function (children, parent) {\n    var nodes = children.map(function (child) {\n      child.parent = parent;\n      return child;\n    });\n    parent[childrenKey] = nodes;\n    setFlattenData([].concat(flattenData, nodes));\n  }, [childrenKey, flattenData]);\n  useEffect(function () {\n    setFlattenData(flattenTree(data));\n  }, [data]);\n  return {\n    addFlattenData: addFlattenData,\n    flattenData: flattenData\n  };\n}\n/**\r\n * A hook for column data\r\n * @param flattenData\r\n */\n\nexport function useColumnData(flattenData) {\n  // The columns displayed in the cascading panel.\n  var _useState2 = useState([flattenData.filter(function (item) {\n    return !item.parent;\n  })]),\n      columnData = _useState2[0],\n      setColumnData = _useState2[1];\n  /**\r\n   * Add a list of options to the cascading panel. Used for lazy loading options.\r\n   * @param column\r\n   * @param index The index of the current column.\r\n   */\n\n\n  function addColumn(column, index) {\n    setColumnData([].concat(slice(columnData, 0, index), [column]));\n  }\n\n  function enforceUpdateColumnData(nextData) {\n    var nextFlattenData = flattenTree(nextData);\n    setColumnData([nextFlattenData.filter(function (item) {\n      return !item.parent;\n    })]);\n  }\n\n  return {\n    columnData: columnData,\n    addColumn: addColumn,\n    setColumnData: setColumnData,\n    enforceUpdateColumnData: enforceUpdateColumnData\n  };\n}\n/**\r\n * A hook that converts the value into a cascading value\r\n * @param props\r\n * @param flattenData\r\n */\n\nexport function useCascadeValue(props, flattenData) {\n  var valueKey = props.valueKey,\n      childrenKey = props.childrenKey,\n      uncheckableItemValues = props.uncheckableItemValues,\n      cascade = props.cascade,\n      valueProp = props.value;\n  /**\r\n   * Get the values of all children\r\n   */\n\n  var getChildrenValue = useCallback(function (item) {\n    var values = [];\n\n    if (!item[childrenKey]) {\n      return values;\n    }\n\n    item[childrenKey].forEach(function (n) {\n      if (uncheckableItemValues && !uncheckableItemValues.some(function (v) {\n        return v === n[valueKey];\n      })) {\n        values.push(n[valueKey]);\n      }\n\n      values = values.concat(getChildrenValue(n));\n    });\n    return values;\n  }, [childrenKey, uncheckableItemValues, valueKey]);\n  var splitValue = useCallback(function (item, checked, value) {\n    var itemValue = item[valueKey];\n    var childrenValue = getChildrenValue(item);\n    var parents = getParents(item);\n    var nextValue = [].concat(value);\n    var removedValue = [];\n\n    if (checked) {\n      nextValue.push(itemValue); // Delete all values under the current node\n\n      removedValue = removedValue.concat(removeAllChildrenValue(nextValue, item, {\n        valueKey: valueKey,\n        childrenKey: childrenKey\n      })); // Traverse all ancestor nodes of the current node\n      // Then determine whether all the child nodes of these nodes are selected, and then they themselves must be selected\n\n      var _loop = function _loop(i) {\n        // Whether the parent node can be selected\n        var isCheckableParent = !uncheckableItemValues.some(function (v) {\n          return v === parents[i][valueKey];\n        });\n\n        if (isCheckableParent) {\n          var isCheckAll = parents[i][childrenKey] // Filter out options that are marked as not selectable\n          .filter(function (n) {\n            return !uncheckableItemValues.some(function (v) {\n              return v === n[valueKey];\n            });\n          }) // Check if all nodes are selected\n          .every(function (n) {\n            return nextValue.some(function (v) {\n              return v === n[valueKey];\n            });\n          });\n\n          if (isCheckAll) {\n            // Add parent node value\n            nextValue.push(parents[i][valueKey]); // Delete all values under the parent node\n\n            removedValue = removedValue.concat(removeAllChildrenValue(nextValue, parents[i], {\n              valueKey: valueKey,\n              childrenKey: childrenKey\n            }));\n          }\n        }\n      };\n\n      for (var i = 0; i < parents.length; i++) {\n        _loop(i);\n      }\n    } else {\n      var tempValue = childrenValue.concat(parents.map(function (item) {\n        return item[valueKey];\n      }));\n      nextValue = nextValue.concat(getOtherItemValuesByUnselectChild(item, nextValue, {\n        valueKey: valueKey,\n        childrenKey: childrenKey\n      })); // Delete related child and parent nodes\n\n      removedValue = remove(nextValue, function (v) {\n        // Delete yourself\n        if (v === itemValue) {\n          return true;\n        }\n\n        return tempValue.some(function (n) {\n          return n === v;\n        });\n      });\n    }\n\n    var uniqValue = uniq(nextValue);\n    var uniqRemovedValue = uniq(removedValue);\n    return {\n      value: uniqValue,\n      removedValue: uniqRemovedValue\n    };\n  }, [valueKey, childrenKey, uncheckableItemValues, getChildrenValue]);\n  var transformValue = useCallback(function (value) {\n    if (value === void 0) {\n      value = [];\n    }\n\n    if (!cascade) {\n      return value;\n    }\n\n    var tempRemovedValue = [];\n    var nextValue = [];\n\n    var _loop2 = function _loop2(i) {\n      // If the value in the current value is already in the deleted list, it will not be processed\n      if (tempRemovedValue.some(function (v) {\n        return v === value[i];\n      })) {\n        return \"continue\";\n      }\n\n      var item = flattenData.find(function (v) {\n        return v[valueKey] === value[i];\n      });\n\n      if (!item) {\n        return \"continue\";\n      }\n\n      var sv = splitValue(item, true, value);\n      tempRemovedValue = uniq(tempRemovedValue.concat(sv.removedValue)); // Get all relevant values\n\n      nextValue = uniq(nextValue.concat(sv.value));\n    };\n\n    for (var i = 0; i < value.length; i++) {\n      var _ret = _loop2(i);\n\n      if (_ret === \"continue\") continue;\n    } // Finally traverse all nextValue, and delete if its parent node is also nextValue\n\n\n    return nextValue.filter(function (v) {\n      var item = flattenData.find(function (n) {\n        return n[valueKey] === v;\n      });\n\n      if (item !== null && item !== void 0 && item.parent && nextValue.some(function (v) {\n        return v === item.parent[valueKey];\n      })) {\n        return false;\n      }\n\n      return true;\n    });\n  }, [cascade, flattenData, splitValue, valueKey]);\n\n  var _useState3 = useState(transformValue(valueProp) || []),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  useEffect(function () {\n    // Update value when valueProp is updated.\n    setValue(transformValue(valueProp) || []);\n  }, [transformValue, valueProp]);\n  return {\n    value: value,\n    setValue: setValue,\n    splitValue: splitValue\n  };\n}","map":{"version":3,"sources":["F:/GitHub Clone/DIrtyLittlePaws/DIrtyLittlePaws/node_modules/rsuite/esm/MultiCascader/utils.js"],"names":["useState","useEffect","useCallback","uniq","remove","slice","flattenTree","getParents","node","parents","parent","push","concat","isSomeChildChecked","value","itemKeys","childrenKey","valueKey","some","child","_child$childrenKey","n","length","isSomeParentChecked","getOtherItemValuesByUnselectChild","itemNode","parentValues","itemValues","findParent","item","v","p","pushChildValue","forEach","removeAllChildrenValue","removedValue","useFlattenData","data","_useState","flattenData","setFlattenData","addFlattenData","children","nodes","map","useColumnData","_useState2","filter","columnData","setColumnData","addColumn","column","index","enforceUpdateColumnData","nextData","nextFlattenData","useCascadeValue","props","uncheckableItemValues","cascade","valueProp","getChildrenValue","values","splitValue","checked","itemValue","childrenValue","nextValue","_loop","i","isCheckableParent","isCheckAll","every","tempValue","uniqValue","uniqRemovedValue","transformValue","tempRemovedValue","_loop2","find","sv","_ret","_useState3","setValue"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport uniq from 'lodash/uniq';\r\nimport remove from 'lodash/remove';\r\nimport slice from 'lodash/slice';\r\nimport { flattenTree } from '../utils/treeUtils';\r\n\r\n/**\r\n * Get all parents of a node\r\n * @param node\r\n */\r\nexport var getParents = function getParents(node) {\r\n  var parents = [];\r\n\r\n  if (!node.parent) {\r\n    return parents;\r\n  }\r\n\r\n  parents.push(node.parent);\r\n  parents = parents.concat(getParents(node.parent));\r\n  return parents;\r\n};\r\n/**\r\n * Check if any child nodes are selected.\r\n * @param node\r\n * @param value\r\n * @param itemKeys\r\n */\r\n\r\nexport var isSomeChildChecked = function isSomeChildChecked(node, value, itemKeys) {\r\n  var childrenKey = itemKeys.childrenKey,\r\n      valueKey = itemKeys.valueKey;\r\n\r\n  if (!node[childrenKey] || !value) {\r\n    return false;\r\n  }\r\n\r\n  return node[childrenKey].some(function (child) {\r\n    var _child$childrenKey;\r\n\r\n    if (value.some(function (n) {\r\n      return n === child[valueKey];\r\n    })) {\r\n      return true;\r\n    }\r\n\r\n    if ((_child$childrenKey = child[childrenKey]) !== null && _child$childrenKey !== void 0 && _child$childrenKey.length) {\r\n      return isSomeChildChecked(child, value, itemKeys);\r\n    }\r\n\r\n    return false;\r\n  });\r\n};\r\n/**\r\n * Check if the parent is selected.\r\n * @param node\r\n * @param value\r\n * @param itemKeys\r\n */\r\n\r\nexport var isSomeParentChecked = function isSomeParentChecked(node, value, itemKeys) {\r\n  var valueKey = itemKeys.valueKey;\r\n\r\n  if (!value) {\r\n    return false;\r\n  }\r\n\r\n  if (value.some(function (n) {\r\n    return n === node[valueKey];\r\n  })) {\r\n    return true;\r\n  }\r\n\r\n  if (node.parent) {\r\n    return isSomeParentChecked(node.parent, value, itemKeys);\r\n  }\r\n\r\n  return false;\r\n};\r\nexport var getOtherItemValuesByUnselectChild = function getOtherItemValuesByUnselectChild(itemNode, value, itemKeys) {\r\n  var valueKey = itemKeys.valueKey,\r\n      childrenKey = itemKeys.childrenKey;\r\n  var parentValues = [];\r\n  var itemValues = []; // Find the parent node of the current node by value\r\n\r\n  function findParent(item) {\r\n    parentValues.push(item[valueKey]);\r\n\r\n    if (value.some(function (v) {\r\n      return v === item[valueKey];\r\n    })) {\r\n      return item;\r\n    }\r\n\r\n    if (item.parent) {\r\n      var p = findParent(item.parent);\r\n\r\n      if (p) {\r\n        return p;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  } // Get child nodes through parent node\r\n\r\n\r\n  function pushChildValue(item) {\r\n    if (!item[childrenKey]) {\r\n      return;\r\n    }\r\n\r\n    item[childrenKey].forEach(function (n) {\r\n      // Determine whether it is a direct parent\r\n      if (parentValues.some(function (v) {\r\n        return v === n[valueKey];\r\n      }) && n[childrenKey]) {\r\n        pushChildValue(n);\r\n      } else if (n[valueKey] !== itemNode[valueKey]) {\r\n        itemValues.push(n[valueKey]);\r\n      }\r\n    });\r\n  }\r\n\r\n  var parent = findParent(itemNode);\r\n\r\n  if (!parent) {\r\n    return [];\r\n  }\r\n\r\n  pushChildValue(parent);\r\n  return itemValues;\r\n};\r\n/**\r\n * Remove the values of all children.\r\n */\r\n\r\nexport var removeAllChildrenValue = function removeAllChildrenValue(value, item, itemKeys) {\r\n  var valueKey = itemKeys.valueKey,\r\n      childrenKey = itemKeys.childrenKey;\r\n  var removedValue = [];\r\n\r\n  if (!item[childrenKey]) {\r\n    return;\r\n  }\r\n\r\n  item[childrenKey].forEach(function (n) {\r\n    removedValue = removedValue.concat(remove(value, function (v) {\r\n      return v === n[valueKey];\r\n    }));\r\n\r\n    if (n[childrenKey]) {\r\n      removeAllChildrenValue(value, n, itemKeys);\r\n    }\r\n  });\r\n  return removedValue;\r\n};\r\n/**\r\n * A hook to flatten tree structure data\r\n * @param data\r\n */\r\n\r\nexport function useFlattenData(data, itemKeys) {\r\n  var childrenKey = itemKeys.childrenKey;\r\n\r\n  var _useState = useState(flattenTree(data)),\r\n      flattenData = _useState[0],\r\n      setFlattenData = _useState[1];\r\n\r\n  var addFlattenData = useCallback(function (children, parent) {\r\n    var nodes = children.map(function (child) {\r\n      child.parent = parent;\r\n      return child;\r\n    });\r\n    parent[childrenKey] = nodes;\r\n    setFlattenData([].concat(flattenData, nodes));\r\n  }, [childrenKey, flattenData]);\r\n  useEffect(function () {\r\n    setFlattenData(flattenTree(data));\r\n  }, [data]);\r\n  return {\r\n    addFlattenData: addFlattenData,\r\n    flattenData: flattenData\r\n  };\r\n}\r\n/**\r\n * A hook for column data\r\n * @param flattenData\r\n */\r\n\r\nexport function useColumnData(flattenData) {\r\n  // The columns displayed in the cascading panel.\r\n  var _useState2 = useState([flattenData.filter(function (item) {\r\n    return !item.parent;\r\n  })]),\r\n      columnData = _useState2[0],\r\n      setColumnData = _useState2[1];\r\n  /**\r\n   * Add a list of options to the cascading panel. Used for lazy loading options.\r\n   * @param column\r\n   * @param index The index of the current column.\r\n   */\r\n\r\n\r\n  function addColumn(column, index) {\r\n    setColumnData([].concat(slice(columnData, 0, index), [column]));\r\n  }\r\n\r\n  function enforceUpdateColumnData(nextData) {\r\n    var nextFlattenData = flattenTree(nextData);\r\n    setColumnData([nextFlattenData.filter(function (item) {\r\n      return !item.parent;\r\n    })]);\r\n  }\r\n\r\n  return {\r\n    columnData: columnData,\r\n    addColumn: addColumn,\r\n    setColumnData: setColumnData,\r\n    enforceUpdateColumnData: enforceUpdateColumnData\r\n  };\r\n}\r\n/**\r\n * A hook that converts the value into a cascading value\r\n * @param props\r\n * @param flattenData\r\n */\r\n\r\nexport function useCascadeValue(props, flattenData) {\r\n  var valueKey = props.valueKey,\r\n      childrenKey = props.childrenKey,\r\n      uncheckableItemValues = props.uncheckableItemValues,\r\n      cascade = props.cascade,\r\n      valueProp = props.value;\r\n  /**\r\n   * Get the values of all children\r\n   */\r\n\r\n  var getChildrenValue = useCallback(function (item) {\r\n    var values = [];\r\n\r\n    if (!item[childrenKey]) {\r\n      return values;\r\n    }\r\n\r\n    item[childrenKey].forEach(function (n) {\r\n      if (uncheckableItemValues && !uncheckableItemValues.some(function (v) {\r\n        return v === n[valueKey];\r\n      })) {\r\n        values.push(n[valueKey]);\r\n      }\r\n\r\n      values = values.concat(getChildrenValue(n));\r\n    });\r\n    return values;\r\n  }, [childrenKey, uncheckableItemValues, valueKey]);\r\n  var splitValue = useCallback(function (item, checked, value) {\r\n    var itemValue = item[valueKey];\r\n    var childrenValue = getChildrenValue(item);\r\n    var parents = getParents(item);\r\n    var nextValue = [].concat(value);\r\n    var removedValue = [];\r\n\r\n    if (checked) {\r\n      nextValue.push(itemValue); // Delete all values under the current node\r\n\r\n      removedValue = removedValue.concat(removeAllChildrenValue(nextValue, item, {\r\n        valueKey: valueKey,\r\n        childrenKey: childrenKey\r\n      })); // Traverse all ancestor nodes of the current node\r\n      // Then determine whether all the child nodes of these nodes are selected, and then they themselves must be selected\r\n\r\n      var _loop = function _loop(i) {\r\n        // Whether the parent node can be selected\r\n        var isCheckableParent = !uncheckableItemValues.some(function (v) {\r\n          return v === parents[i][valueKey];\r\n        });\r\n\r\n        if (isCheckableParent) {\r\n          var isCheckAll = parents[i][childrenKey] // Filter out options that are marked as not selectable\r\n          .filter(function (n) {\r\n            return !uncheckableItemValues.some(function (v) {\r\n              return v === n[valueKey];\r\n            });\r\n          }) // Check if all nodes are selected\r\n          .every(function (n) {\r\n            return nextValue.some(function (v) {\r\n              return v === n[valueKey];\r\n            });\r\n          });\r\n\r\n          if (isCheckAll) {\r\n            // Add parent node value\r\n            nextValue.push(parents[i][valueKey]); // Delete all values under the parent node\r\n\r\n            removedValue = removedValue.concat(removeAllChildrenValue(nextValue, parents[i], {\r\n              valueKey: valueKey,\r\n              childrenKey: childrenKey\r\n            }));\r\n          }\r\n        }\r\n      };\r\n\r\n      for (var i = 0; i < parents.length; i++) {\r\n        _loop(i);\r\n      }\r\n    } else {\r\n      var tempValue = childrenValue.concat(parents.map(function (item) {\r\n        return item[valueKey];\r\n      }));\r\n      nextValue = nextValue.concat(getOtherItemValuesByUnselectChild(item, nextValue, {\r\n        valueKey: valueKey,\r\n        childrenKey: childrenKey\r\n      })); // Delete related child and parent nodes\r\n\r\n      removedValue = remove(nextValue, function (v) {\r\n        // Delete yourself\r\n        if (v === itemValue) {\r\n          return true;\r\n        }\r\n\r\n        return tempValue.some(function (n) {\r\n          return n === v;\r\n        });\r\n      });\r\n    }\r\n\r\n    var uniqValue = uniq(nextValue);\r\n    var uniqRemovedValue = uniq(removedValue);\r\n    return {\r\n      value: uniqValue,\r\n      removedValue: uniqRemovedValue\r\n    };\r\n  }, [valueKey, childrenKey, uncheckableItemValues, getChildrenValue]);\r\n  var transformValue = useCallback(function (value) {\r\n    if (value === void 0) {\r\n      value = [];\r\n    }\r\n\r\n    if (!cascade) {\r\n      return value;\r\n    }\r\n\r\n    var tempRemovedValue = [];\r\n    var nextValue = [];\r\n\r\n    var _loop2 = function _loop2(i) {\r\n      // If the value in the current value is already in the deleted list, it will not be processed\r\n      if (tempRemovedValue.some(function (v) {\r\n        return v === value[i];\r\n      })) {\r\n        return \"continue\";\r\n      }\r\n\r\n      var item = flattenData.find(function (v) {\r\n        return v[valueKey] === value[i];\r\n      });\r\n\r\n      if (!item) {\r\n        return \"continue\";\r\n      }\r\n\r\n      var sv = splitValue(item, true, value);\r\n      tempRemovedValue = uniq(tempRemovedValue.concat(sv.removedValue)); // Get all relevant values\r\n\r\n      nextValue = uniq(nextValue.concat(sv.value));\r\n    };\r\n\r\n    for (var i = 0; i < value.length; i++) {\r\n      var _ret = _loop2(i);\r\n\r\n      if (_ret === \"continue\") continue;\r\n    } // Finally traverse all nextValue, and delete if its parent node is also nextValue\r\n\r\n\r\n    return nextValue.filter(function (v) {\r\n      var item = flattenData.find(function (n) {\r\n        return n[valueKey] === v;\r\n      });\r\n\r\n      if (item !== null && item !== void 0 && item.parent && nextValue.some(function (v) {\r\n        return v === item.parent[valueKey];\r\n      })) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }, [cascade, flattenData, splitValue, valueKey]);\r\n\r\n  var _useState3 = useState(transformValue(valueProp) || []),\r\n      value = _useState3[0],\r\n      setValue = _useState3[1];\r\n\r\n  useEffect(function () {\r\n    // Update value when valueProp is updated.\r\n    setValue(transformValue(valueProp) || []);\r\n  }, [transformValue, valueProp]);\r\n  return {\r\n    value: value,\r\n    setValue: setValue,\r\n    splitValue: splitValue\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}