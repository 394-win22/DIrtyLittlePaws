{"ast":null,"code":"/**\r\n *\r\n * Safe chained function\r\n *\r\n * Will only create a new function if needed,\r\n * otherwise will pass back existing functions or null.\r\n *\r\n * Largely copied directly from:\r\n * https://github.com/react-bootstrap/react-bootstrap/blob/master/src/utils/createChainedFunction.js\r\n *\r\n * @param {function} functions to chain\r\n * @returns {function|undefined}\r\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f !== null && typeof f !== 'undefined';\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === undefined) {\n      return f;\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      f.apply(this, args);\n    };\n  }, undefined);\n}\n\nexport default createChainedFunction;","map":{"version":3,"sources":["C:/Users/Sebastian/Documents/code projects/DIrtyLittlePaws/DIrtyLittlePaws/node_modules/rsuite/esm/utils/createChainedFunction.js"],"names":["createChainedFunction","_len","arguments","length","funcs","Array","_key","filter","f","reduce","acc","Error","undefined","chainedFunction","_len2","args","_key2","apply"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAT,GAAiC;AAC/B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAArC,EAAsDK,IAAI,GAAG,CAAlE,EAAqEA,IAAI,GAAGL,IAA5E,EAAkFK,IAAI,EAAtF,EAA0F;AACxFF,IAAAA,KAAK,CAACE,IAAD,CAAL,GAAcJ,SAAS,CAACI,IAAD,CAAvB;AACD;;AAED,SAAOF,KAAK,CAACG,MAAN,CAAa,UAAUC,CAAV,EAAa;AAC/B,WAAOA,CAAC,KAAK,IAAN,IAAc,OAAOA,CAAP,KAAa,WAAlC;AACD,GAFM,EAEJC,MAFI,CAEG,UAAUC,GAAV,EAAeF,CAAf,EAAkB;AAC1B,QAAI,OAAOA,CAAP,KAAa,UAAjB,EAA6B;AAC3B,YAAM,IAAIG,KAAJ,CAAU,yEAAV,CAAN;AACD;;AAED,QAAID,GAAG,KAAKE,SAAZ,EAAuB;AACrB,aAAOJ,CAAP;AACD;;AAED,WAAO,SAASK,eAAT,GAA2B;AAChC,WAAK,IAAIC,KAAK,GAAGZ,SAAS,CAACC,MAAtB,EAA8BY,IAAI,GAAG,IAAIV,KAAJ,CAAUS,KAAV,CAArC,EAAuDE,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGF,KAA/E,EAAsFE,KAAK,EAA3F,EAA+F;AAC7FD,QAAAA,IAAI,CAACC,KAAD,CAAJ,GAAcd,SAAS,CAACc,KAAD,CAAvB;AACD;;AAEDN,MAAAA,GAAG,CAACO,KAAJ,CAAU,IAAV,EAAgBF,IAAhB;AACAP,MAAAA,CAAC,CAACS,KAAF,CAAQ,IAAR,EAAcF,IAAd;AACD,KAPD;AAQD,GAnBM,EAmBJH,SAnBI,CAAP;AAoBD;;AAED,eAAeZ,qBAAf","sourcesContent":["/**\r\n *\r\n * Safe chained function\r\n *\r\n * Will only create a new function if needed,\r\n * otherwise will pass back existing functions or null.\r\n *\r\n * Largely copied directly from:\r\n * https://github.com/react-bootstrap/react-bootstrap/blob/master/src/utils/createChainedFunction.js\r\n *\r\n * @param {function} functions to chain\r\n * @returns {function|undefined}\r\n */\r\nfunction createChainedFunction() {\r\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    funcs[_key] = arguments[_key];\r\n  }\r\n\r\n  return funcs.filter(function (f) {\r\n    return f !== null && typeof f !== 'undefined';\r\n  }).reduce(function (acc, f) {\r\n    if (typeof f !== 'function') {\r\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\r\n    }\r\n\r\n    if (acc === undefined) {\r\n      return f;\r\n    }\r\n\r\n    return function chainedFunction() {\r\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      acc.apply(this, args);\r\n      f.apply(this, args);\r\n    };\r\n  }, undefined);\r\n}\r\n\r\nexport default createChainedFunction;"]},"metadata":{},"sourceType":"module"}