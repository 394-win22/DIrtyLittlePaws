{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport formatErrorMessage from './formatErrorMessage';\n/**\r\n * Create a data asynchronous validator\r\n * @param data\r\n */\n\nexport function createValidatorAsync(data, name) {\n  function check(errorMessage) {\n    return function (checkResult) {\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: errorMessage\n        };\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n\n      return null;\n    };\n  }\n\n  return function (value, rules) {\n    var promises = rules.map(function (rule) {\n      var onValid = rule.onValid,\n          errorMessage = rule.errorMessage,\n          params = rule.params;\n      return Promise.resolve(onValid(value, data, name)).then(check(formatErrorMessage(errorMessage, _extends({}, params, {\n        name: Array.isArray(name) ? name.join('.') : name\n      }))));\n    });\n    return Promise.all(promises).then(function (results) {\n      return results.find(function (item) {\n        return item && (item === null || item === void 0 ? void 0 : item.hasError);\n      });\n    });\n  };\n}\nexport default createValidatorAsync;","map":{"version":3,"sources":["F:/GitHub Clone/DIrtyLittlePaws/DIrtyLittlePaws/node_modules/schema-typed/es/utils/createValidatorAsync.js"],"names":["_extends","formatErrorMessage","createValidatorAsync","data","name","check","errorMessage","checkResult","hasError","array","value","rules","promises","map","rule","onValid","params","Promise","resolve","then","Array","isArray","join","all","results","find","item"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AAC/C,WAASC,KAAT,CAAeC,YAAf,EAA6B;AAC3B,WAAO,UAAUC,WAAV,EAAuB;AAC5B,UAAIA,WAAW,KAAK,KAApB,EAA2B;AACzB,eAAO;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELF,UAAAA,YAAY,EAAEA;AAFT,SAAP;AAID,OALD,MAKO,IAAI,OAAOC,WAAP,KAAuB,QAAvB,KAAoCA,WAAW,CAACC,QAAZ,IAAwBD,WAAW,CAACE,KAAxE,CAAJ,EAAoF;AACzF,eAAOF,WAAP;AACD;;AAED,aAAO,IAAP;AACD,KAXD;AAYD;;AAED,SAAO,UAAUG,KAAV,EAAiBC,KAAjB,EAAwB;AAC7B,QAAIC,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgB;AACvC,UAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,UACIT,YAAY,GAAGQ,IAAI,CAACR,YADxB;AAAA,UAEIU,MAAM,GAAGF,IAAI,CAACE,MAFlB;AAGA,aAAOC,OAAO,CAACC,OAAR,CAAgBH,OAAO,CAACL,KAAD,EAAQP,IAAR,EAAcC,IAAd,CAAvB,EAA4Ce,IAA5C,CAAiDd,KAAK,CAACJ,kBAAkB,CAACK,YAAD,EAAeN,QAAQ,CAAC,EAAD,EAAKgB,MAAL,EAAa;AAClHZ,QAAAA,IAAI,EAAEgB,KAAK,CAACC,OAAN,CAAcjB,IAAd,IAAsBA,IAAI,CAACkB,IAAL,CAAU,GAAV,CAAtB,GAAuClB;AADqE,OAAb,CAAvB,CAAnB,CAAtD,CAAP;AAGD,KAPc,CAAf;AAQA,WAAOa,OAAO,CAACM,GAAR,CAAYX,QAAZ,EAAsBO,IAAtB,CAA2B,UAAUK,OAAV,EAAmB;AACnD,aAAOA,OAAO,CAACC,IAAR,CAAa,UAAUC,IAAV,EAAgB;AAClC,eAAOA,IAAI,KAAKA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAAClB,QAAtD,CAAX;AACD,OAFM,CAAP;AAGD,KAJM,CAAP;AAKD,GAdD;AAeD;AACD,eAAeN,oBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport formatErrorMessage from './formatErrorMessage';\r\n/**\r\n * Create a data asynchronous validator\r\n * @param data\r\n */\r\n\r\nexport function createValidatorAsync(data, name) {\r\n  function check(errorMessage) {\r\n    return function (checkResult) {\r\n      if (checkResult === false) {\r\n        return {\r\n          hasError: true,\r\n          errorMessage: errorMessage\r\n        };\r\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\r\n        return checkResult;\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  return function (value, rules) {\r\n    var promises = rules.map(function (rule) {\r\n      var onValid = rule.onValid,\r\n          errorMessage = rule.errorMessage,\r\n          params = rule.params;\r\n      return Promise.resolve(onValid(value, data, name)).then(check(formatErrorMessage(errorMessage, _extends({}, params, {\r\n        name: Array.isArray(name) ? name.join('.') : name\r\n      }))));\r\n    });\r\n    return Promise.all(promises).then(function (results) {\r\n      return results.find(function (item) {\r\n        return item && (item === null || item === void 0 ? void 0 : item.hasError);\r\n      });\r\n    });\r\n  };\r\n}\r\nexport default createValidatorAsync;"]},"metadata":{},"sourceType":"module"}