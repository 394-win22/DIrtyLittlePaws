{"ast":null,"code":"var _jsxFileName = \"/Users/horange/Documents/GitHub/DIrtyLittlePaws/dirtylittlepaws/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Handlebars from \"handlebars/dist/cjs/handlebars\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\n/**\n * Defines an instance of the Locator+ solution, to be instantiated\n * when the Maps library is loaded.\n */\n\nconst mapStyles = {\n  width: \"500px\",\n  height: \"500px\"\n};\n\nconst instance = /*#__PURE__*/_jsxDEV(Panel, {\n  header: \"Panel title\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"HELLO WORLD\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this); //Array of positions for dog station locations with amenties and names \n\n\nconst markers = [{\n  id: 1,\n  latitude: 41.918060,\n  longitude: -87.636990,\n  name: 'marker 1',\n  amenities: 'Washing, Drying, Manicure, Pawicure, Grooming'\n}, {\n  id: 2,\n  latitude: 41.922230,\n  longitude: -87.665672,\n  name: 'marker 2',\n  amenities: 'Washing, Drying, Manicure, Pawicure, Grooming'\n}, {\n  id: 3,\n  latitude: 41.9103558,\n  longitude: -87.6735355,\n  name: 'marker 3'\n}, {\n  id: 4,\n  latitude: 41.9174825,\n  longitude: -87.6597932,\n  name: 'marker 4'\n}, {\n  id: 5,\n  latitude: 41.9149889,\n  longitude: -87.6645697,\n  name: 'marker 5'\n}, {\n  id: 6,\n  latitude: 41.9010907,\n  longitude: -87.6318406,\n  name: 'marker 6'\n}, {\n  id: 7,\n  latitude: 41.9320681,\n  longitude: -87.6687625,\n  name: 'marker 7'\n}]; //Initializes the map and marker functionality \n\nconst App = () => {\n  const state = {\n    showingInfoWindow: false,\n    // Hides or shows the InfoWindow\n    activeMarker: {},\n    // Shows the active marker upon click\n    selectedPlace: {} // Shows the InfoWindow to the selected place upon a marker\n\n  };\n\n  const onMarkerClick = (props, marker, e) => this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  const onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  }; //Renders the app \n\n\n  return (\n    /*#__PURE__*/\n    //Renders the panel and the map \n    _jsxDEV(\"div\", {\n      className: \"panel_map\",\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        className: \"panel\",\n        header: \"Panel title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"HELLO WORLD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: this.props.google,\n          zoom: 14,\n          style: mapStyles,\n          initialCenter: {\n            lat: 41.918060,\n            lng: -87.636990\n          },\n          children: [Object.values(markers).map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n            onClick: this.onMarkerClick,\n            position: {\n              lat: marker.latitude,\n              lng: marker.longitude\n            },\n            name: marker.name,\n            title: marker.amenities\n          }, marker.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n            marker: this.state.activeMarker,\n            visible: this.state.showingInfoWindow,\n            onClose: this.onClose,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: this.state.selectedPlace.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: this.state.selectedPlace.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }, this)\n  );\n}; // API Keys \n\n\n_c = App;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\"\n})(MapContainer); //Run App (not using it rn - may need it later)\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n//export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/horange/Documents/GitHub/DIrtyLittlePaws/dirtylittlepaws/src/App.js"],"names":["logo","React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","Handlebars","Panel","PanelGroup","google","window","mapStyles","width","height","instance","markers","id","latitude","longitude","name","amenities","App","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","lat","lng","Object","values","map","title","apiKey","MapContainer"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Handlebars from \"handlebars/dist/cjs/handlebars\";\nimport { Panel, PanelGroup } from \"rsuite\";\nconst google = window.google;\n\n/**\n * Defines an instance of the Locator+ solution, to be instantiated\n * when the Maps library is loaded.\n */\nconst mapStyles = {\n  width: \"500px\",\n  height: \"500px\",\n};\n\nconst instance = (\n  <Panel header=\"Panel title\">\n    <p>HELLO WORLD</p>\n  </Panel>\n);\n\n//Array of positions for dog station locations with amenties and names \nconst markers=[\n  {\n      id:1,\n      latitude: 41.918060, \n      longitude: -87.636990,\n      name:'marker 1',\n      amenities: 'Washing, Drying, Manicure, Pawicure, Grooming'\n\n  },\n  {\n      id: 2,\n      latitude: 41.922230,\n      longitude: -87.665672,\n      name: 'marker 2',\n      amenities: 'Washing, Drying, Manicure, Pawicure, Grooming'\n  },\n  {\n    id: 3,\n    latitude: 41.9103558,\n    longitude: -87.6735355,\n    name: 'marker 3'\n  },\n  {\n    id: 4,\n    latitude: 41.9174825,\n    longitude: -87.6597932,\n    name: 'marker 4'\n  },\n  {\n    id: 5,\n    latitude: 41.9149889,\n    longitude: -87.6645697,\n    name: 'marker 5'\n  },\n  {\n    id: 6,\n    latitude: 41.9010907,\n    longitude: -87.6318406,\n    name: 'marker 6'\n  },\n  {\n    id: 7,\n    latitude: 41.9320681,\n    longitude: -87.6687625,\n    name: 'marker 7'\n}]\n\n//Initializes the map and marker functionality \n const App = () => {\n\n  const state = {\n    showingInfoWindow: false, // Hides or shows the InfoWindow\n    activeMarker: {}, // Shows the active marker upon click\n    selectedPlace: {}, // Shows the InfoWindow to the selected place upon a marker\n  };\n\n  const onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  const onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n\n\n//Renders the app \n    return (\n    //Renders the panel and the map \n     <div className=\"panel_map\">\n       <Panel className=\"panel\" header=\"Panel title\">\n         <p>HELLO WORLD</p>\n        </Panel>\n      \n      \n      <div className=\"map\">\n      \n      {/* Map API initialization */}\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={\n          {\n            lat: 41.918060, \n            lng: -87.636990\n          }\n        }\n        >\n       {/* Populating markers from marker list, allows for multiple markers */}\n      {Object.values(markers).map(marker => (\n            <Marker\n              onClick={this.onMarkerClick}\n              position={{ lat: marker.latitude, lng: marker.longitude }}\n              key={marker.id}\n              name={marker.name}\n              title = {marker.amenities}\n            />\n        ))}\n        {/* What shows up in the window on marker click */}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n            <h4>{this.state.selectedPlace.title}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n      </div>\n      </div>\n\n    );\n}\n\n// API Keys \nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\",\n})(MapContainer);\n\n//Run App (not using it rn - may need it later)\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n//export default App;\n"]},"metadata":{},"sourceType":"module"}