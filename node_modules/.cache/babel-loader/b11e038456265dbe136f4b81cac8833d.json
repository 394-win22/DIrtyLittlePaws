{"ast":null,"code":"import _classCallCheck from\"F:/GitHub Clone/DIrtyLittlePaws/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"F:/GitHub Clone/DIrtyLittlePaws/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"F:/GitHub Clone/DIrtyLittlePaws/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"F:/GitHub Clone/DIrtyLittlePaws/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import logo from\"./logo.svg\";import\"./App.css\";import React,{Component,PropTypes}from\"react\";import ReactDOM from\"react-dom\";import{Map,GoogleApiWrapper,InfoWindow,Marker}from\"google-maps-react\";import{MapLayout,MainLayout,PanelStyles,LocationName,AmenityName,AvailabilityTxt,PriceTxt,ScanButton,ScanButtonTxt,AmenitiesLayout,BottomNav,ScanBottomNavTxt,ScanButtonBottomNav,AccountIcon,HelpIcon,TopBanner}from\"./styles/mapstyles\";import close from\"../src/styles/svgs/close.svg\";import CurrentLocationIcon from\"../src/styles/svgs/Location.svg\";import paws from\"../src/styles/svgs/paws.png\";import Activepaws from\"../src/styles/svgs/ActivePaws.png\";import CurrentLocation from\"./Map\";import{database,signInwithG,auth}from\"./utilities/firebase.js\";import{getDatabase,onValue,ref,set,on}from\"firebase/database\";import scanSVG from\"../src/styles/svgs/scan.svg\";import accSVG from\"../src/styles/svgs/account.svg\";import helpSVG from\"../src/styles/svgs/help.svg\";import topLogo from\"../src/styles/svgs/SpotLogos.png\";import Profile from\"./Profile.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var google=window.google;/**\r\n * Defines an instance of the Locator+ solution, to be instantiated\r\n * when the Maps library is loaded.\r\n */ // const mapStyles = {\n//   width: \"428px\",\n//   height: \"934px\",\n// };\n// const instance = (\n//   <Panel header=\"Panel title\">\n//     <p>HELLO WORLD</p>\n//   </Panel>\n// );\n// let user = null;\nvar SignInButton=function SignInButton(){// {document.getElementById(\"user-info\").innerHTML = \"\"};\nreturn/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:function onClick(){signInwithG();},children:\"Sign In\"});};// const SignOutButton = (cuser) => {\n//   return (<>\n//     <p className=\"email\">\n//       {window.innerWidth > 800 ? cuser : null}\n//       <button className=\"btn\" id=\"out\" style={{ width: 120, margin: 20 }}\n//         onClick={() => auth.signOut()}>\n//         Sign Out\n//       </button>\n//     </p>\n//   </>\n//   )\n// };\n// function MyFireBaseHook()\n// {\n//   return function WrappedComponent()\n//     {\n//       const [locations, loading, error] = useData('/Locations/');\n//       if (error) return <h1>{error}</h1>;\n//       if (loading) return <h1>Loading Locations...</h1>;\n//       console.log(locations)\n//       return <Component Location = {locations}/>;\n//     };\n// }\nexport var ProfileButton=function ProfileButton(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"input\",{type:\"image\",src:accSVG,name:\"saveForm\",className:\"btTxt submit\",onClick:function onClick(){return ReactDOM.render(/*#__PURE__*/_jsx(Profile,{}),document.getElementById(\"root\"));}})});};//Initializes the map and marker functionality\nexport var MapContainer=/*#__PURE__*/function(_Component){_inherits(MapContainer,_Component);var _super=_createSuper(MapContainer);function MapContainer(_props){var _this;_classCallCheck(this,MapContainer);_this=_super.call(this,_props);_this.unsubscribeFromAuth=signInwithG();_this.onMarkerClick=function(props,marker,e){return _this.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});};_this.onClose=function(props){if(_this.state.showingInfoWindow){_this.setState({showingInfoWindow:false,activeMarker:null});}};_this.onSignIn=function(){_this.setState({user:true});};_this.state={showingInfoWindow:false,// Hides or shows the InfoWindow\nactiveMarker:{},// Shows the active marker upon click\nselectedPlace:{},// Shows the InfoWindow to the selected place upon a marker\nicon:paws,locationList:[],currentUser:null};return _this;}_createClass(MapContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var reference=ref(database,\"/Locations/\");onValue(reference,function(snapshot){var locations=[];snapshot.forEach(function(snap){// snap.val() is the dictionary with all your keys/values from the 'students-list' path\nlocations.push(snap.val());});_this2.setState({locationList:locations});});this.unsubscribeFromAuth=auth.onAuthStateChanged(function(user){_this2.setState({currentUser:user});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unsubscribeFromAuth();}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/ (//Renders the panel and the map <MyFireBaseHook/>\n_jsx(\"div\",{children:!this.state.currentUser?/*#__PURE__*/_jsx(SignInButton,{}):/*#__PURE__*/_jsx(\"div\",{id:\"outline\",children:/*#__PURE__*/_jsxs(MainLayout,{children:[/*#__PURE__*/_jsx(TopBanner,{children:/*#__PURE__*/_jsx(\"img\",{src:topLogo,width:\"96px\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"user-info\",children:this.state.currentUser?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:this.state.currentUser.photoURL})}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Name: \",this.state.currentUser.displayName]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Email: \",this.state.currentUser.email]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:function onClick(){return auth.signOut();},children:\"Sign Out\"})]}):/*#__PURE__*/_jsx(SignInButton,{})}),/*#__PURE__*/_jsxs(CurrentLocation,{centerAroundCurrentLocation:true,google:this.props.google,children:[/*#__PURE__*/_jsx(Marker,{icon:CurrentLocationIcon,onClick:this.onMarkerClick,name:\"Current Location\"},\"current\"),Object.values(this.state.locationList).map(function(marker){return/*#__PURE__*/_jsx(Marker,{onClick:_this3.onMarkerClick,icon:_this3.state.activeMarker===marker?Activepaws:paws,position:{lat:marker.latitude,lng:marker.longitude},name:marker.name,availability:\"\\u2022 Available\",price:\"$3.30 unlock, $0.3 per min\",title:marker.amenities},marker.id);}),/*#__PURE__*/_jsx(InfoWindow,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow,onClose:this.onClose,children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h4\",{children:this.state.selectedPlace.name})})})]}),/*#__PURE__*/_jsxs(BottomNav,{children:[/*#__PURE__*/_jsx(AccountIcon,{children:/*#__PURE__*/_jsx(ProfileButton,{})}),/*#__PURE__*/_jsxs(ScanButtonBottomNav,{children:[/*#__PURE__*/_jsx(\"img\",{src:scanSVG}),/*#__PURE__*/_jsx(ScanBottomNavTxt,{children:\"SCAN\"})]}),/*#__PURE__*/_jsx(HelpIcon,{children:/*#__PURE__*/_jsx(\"img\",{src:helpSVG})})]}),this.state.showingInfoWindow?/*#__PURE__*/_jsxs(PanelStyles,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow,onClose:this.onClose,children:[/*#__PURE__*/_jsx(\"img\",{src:close,onClick:function onClick(){return _this3.setState({showingInfoWindow:false,activeMarker:null});}}),/*#__PURE__*/_jsx(AvailabilityTxt,{children:this.state.selectedPlace.availability}),/*#__PURE__*/_jsx(LocationName,{children:this.state.selectedPlace.name}),/*#__PURE__*/_jsx(PriceTxt,{children:this.state.selectedPlace.price}),/*#__PURE__*/_jsx(AmenitiesLayout,{children:/*#__PURE__*/_jsx(AmenityName,{children:this.state.selectedPlace.title})}),/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(ScanButton,{children:/*#__PURE__*/_jsx(ScanButtonTxt,{children:\"Scan to unlock\"})})})]}):null]})})}));}}]);return MapContainer;}(Component);// API Keys\nexport default GoogleApiWrapper({apiKey:\"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\"})(MapContainer);//Run App (not using it rn - may need it later)\n// function App() {\n//   return (\n//     //Renders the panel and the map\n//      <div className=\"panel_map\">\n//        <Panel className=\"panel\" header=\"Panel title\">\n//          <p>HELLO WORLD</p>\n//         </Panel>\n//       <div className=\"map\">\n//       {/* Map API initialization */}\n//       <Map\n//         google={this.props.google}\n//         zoom={14}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 41.918060,\n//             lng: -87.636990\n//           }\n//         }\n//         >\n//        {/* Populating markers from marker list, allows for multiple markers */}\n//       {Object.values(markers).map(marker => (\n//             <Marker\n//               onClick={this.onMarkerClick}\n//               position={{ lat: marker.latitude, lng: marker.longitude }}\n//               key={marker.id}\n//               name={marker.name}\n//               title = {marker.amenities}\n//             />\n//         ))}\n//         {/* What shows up in the window on marker click */}\n//         <InfoWindow\n//           marker={this.state.activeMarker}\n//           visible={this.state.showingInfoWindow}\n//           onClose={this.onClose}\n//         >\n//           <div>\n//             <h4>{this.state.selectedPlace.name}</h4>\n//             <h4>{this.state.selectedPlace.title}</h4>\n//           </div>\n//         </InfoWindow>\n//       </Map>\n//       </div>\n//       </div>\n//     );\n// }\n//export default App;","map":{"version":3,"sources":["F:/GitHub Clone/DIrtyLittlePaws/src/App.js"],"names":["logo","React","Component","PropTypes","ReactDOM","Map","GoogleApiWrapper","InfoWindow","Marker","MapLayout","MainLayout","PanelStyles","LocationName","AmenityName","AvailabilityTxt","PriceTxt","ScanButton","ScanButtonTxt","AmenitiesLayout","BottomNav","ScanBottomNavTxt","ScanButtonBottomNav","AccountIcon","HelpIcon","TopBanner","close","CurrentLocationIcon","paws","Activepaws","CurrentLocation","database","signInwithG","auth","getDatabase","onValue","ref","set","on","scanSVG","accSVG","helpSVG","topLogo","Profile","google","window","SignInButton","ProfileButton","render","document","getElementById","MapContainer","props","unsubscribeFromAuth","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","onSignIn","user","icon","locationList","currentUser","reference","snapshot","locations","forEach","snap","push","val","onAuthStateChanged","photoURL","displayName","email","signOut","Object","values","map","lat","latitude","lng","longitude","name","amenities","id","availability","price","title","apiKey"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component, PropTypes } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\nimport {\r\n  MapLayout,\r\n  MainLayout,\r\n  PanelStyles,\r\n  LocationName,\r\n  AmenityName,\r\n  AvailabilityTxt,\r\n  PriceTxt,\r\n  ScanButton,\r\n  ScanButtonTxt,\r\n  AmenitiesLayout,\r\n  BottomNav,\r\n  ScanBottomNavTxt,\r\n  ScanButtonBottomNav,\r\n  AccountIcon,\r\n  HelpIcon,\r\n  TopBanner,\r\n} from \"./styles/mapstyles\";\r\nimport close from \"../src/styles/svgs/close.svg\";\r\nimport CurrentLocationIcon from \"../src/styles/svgs/Location.svg\";\r\nimport paws from \"../src/styles/svgs/paws.png\";\r\nimport Activepaws from \"../src/styles/svgs/ActivePaws.png\";\r\nimport CurrentLocation from \"./Map\";\r\nimport { database, signInwithG, auth } from \"./utilities/firebase.js\";\r\n\r\nimport { getDatabase, onValue, ref, set, on } from \"firebase/database\";\r\n\r\nimport scanSVG from \"../src/styles/svgs/scan.svg\";\r\nimport accSVG from \"../src/styles/svgs/account.svg\";\r\nimport helpSVG from \"../src/styles/svgs/help.svg\";\r\nimport topLogo from \"../src/styles/svgs/SpotLogos.png\";\r\n\r\nimport Profile from \"./Profile.js\"\r\nconst google = window.google;\r\n\r\n\r\n/**\r\n * Defines an instance of the Locator+ solution, to be instantiated\r\n * when the Maps library is loaded.\r\n */\r\n// const mapStyles = {\r\n//   width: \"428px\",\r\n//   height: \"934px\",\r\n// };\r\n\r\n// const instance = (\r\n//   <Panel header=\"Panel title\">\r\n//     <p>HELLO WORLD</p>\r\n//   </Panel>\r\n// );\r\n\r\n// let user = null;\r\n\r\nconst SignInButton = () => {\r\n  // {document.getElementById(\"user-info\").innerHTML = \"\"};\r\n\r\n  return (\r\n    <button className=\"btn\"\r\n      onClick={() => {\r\n        signInwithG();\r\n      }\r\n      }>\r\n      \r\n      Sign In\r\n    </button>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n// const SignOutButton = (cuser) => {\r\n//   return (<>\r\n//     <p className=\"email\">\r\n//       {window.innerWidth > 800 ? cuser : null}\r\n//       <button className=\"btn\" id=\"out\" style={{ width: 120, margin: 20 }}\r\n//         onClick={() => auth.signOut()}>\r\n//         Sign Out\r\n//       </button>\r\n//     </p>\r\n//   </>\r\n//   )\r\n// };\r\n\r\n// function MyFireBaseHook()\r\n// {\r\n//   return function WrappedComponent()\r\n//     {\r\n//       const [locations, loading, error] = useData('/Locations/');\r\n//       if (error) return <h1>{error}</h1>;\r\n//       if (loading) return <h1>Loading Locations...</h1>;\r\n//       console.log(locations)\r\n//       return <Component Location = {locations}/>;\r\n//     };\r\n// }\r\nexport const ProfileButton = () => (\r\n  <>\r\n    {/* <button\r\n      type=\"button\"\r\n      className=\"btn\" \r\n      img = {accSVG}\r\n      onClick={() =>\r\n        ReactDOM.render(<Profile />, document.getElementById(\"root\"))\r\n      }\r\n    > */}\r\n      <input type=\"image\" src={accSVG} name=\"saveForm\" className=\"btTxt submit\" onClick={() =>\r\n        ReactDOM.render(<Profile />, document.getElementById(\"root\"))\r\n      } >\r\n\r\n      </input>\r\n\r\n      {/* { window.innerWidth > 600 ? \"Add food\" : \"add\"} */}\r\n\r\n    {/*  </button> */}\r\n  </>\r\n);\r\n\r\n//Initializes the map and marker functionality\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showingInfoWindow: false, // Hides or shows the InfoWindow\r\n      activeMarker: {}, // Shows the active marker upon click\r\n      selectedPlace: {}, // Shows the InfoWindow to the selected place upon a marker\r\n      icon: paws,\r\n      locationList: [],\r\n      currentUser: null\r\n    };\r\n  }\r\n  unsubscribeFromAuth = signInwithG();\r\n\r\n  // GetData = () => {\r\n  //   return function WrappedComponent()\r\n  //   {\r\n  //     const [locations, loading, error] = useData('/Locations/');\r\n  //     if (error) return <h1>{error}</h1>;\r\n  //     if (loading) return <h1>Loading Locations...</h1>;\r\n\r\n  //     return locations;\r\n  //   };\r\n\r\n  // }\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n\r\n  onClose = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  onSignIn = () => {\r\n    this.setState({ user: true });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const reference = ref(database, \"/Locations/\");\r\n\r\n    onValue(reference, (snapshot) => {\r\n      let locations = [];\r\n      snapshot.forEach((snap) => {\r\n        // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n        locations.push(snap.val());\r\n      });\r\n\r\n      this.setState({ locationList: locations });\r\n    });\r\n\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\r\n      this.setState({ currentUser: user })\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n  render() {\r\n    return (\r\n      //Renders the panel and the map <MyFireBaseHook/>\r\n      <div>\r\n        {!this.state.currentUser ? <SignInButton />: \r\n        <div id=\"outline\">\r\n          <MainLayout>\r\n            <TopBanner>\r\n              <img src={topLogo} width=\"96px\" />\r\n            </TopBanner>\r\n            {/* <SignInButton/> */}\r\n\r\n            <div id='user-info'>\r\n              {this.state.currentUser ? (<div>\r\n                <div>\r\n                  <img src={this.state.currentUser.photoURL} />\r\n                </div>\r\n                <div>Name: {this.state.currentUser.displayName}</div>\r\n                <div>Email: {this.state.currentUser.email}</div>\r\n\r\n                <button className=\"btn\" onClick={() => auth.signOut()}>Sign Out</button>\r\n              </div>\r\n              ) : <SignInButton />}\r\n            </div>\r\n            <CurrentLocation\r\n              centerAroundCurrentLocation\r\n              google={this.props.google}\r\n            >\r\n              <Marker key={\"current\"}\r\n                icon={CurrentLocationIcon}\r\n                onClick={this.onMarkerClick}\r\n                name={\"Current Location\"}\r\n              />\r\n              {/* <InfoWindow\r\n              marker={this.state.activeMarker}\r\n              visible={this.state.showingInfoWindow}\r\n              onClose={this.onClose}\r\n            >\r\n              <div>\r\n                <h4>{this.state.selectedPlace.name}</h4>\r\n              </div>\r\n            </InfoWindow> */}\r\n              {Object.values(this.state.locationList).map((marker) =>\r\n                <Marker\r\n                  onClick={this.onMarkerClick}\r\n                  icon={this.state.activeMarker === marker ? Activepaws : paws}\r\n                  position={{ lat: marker.latitude, lng: marker.longitude }}\r\n                  key={marker.id}\r\n                  name={marker.name}\r\n                  availability=\"• Available\"\r\n                  price=\"$3.30 unlock, $0.3 per min\"\r\n                  title={marker.amenities}\r\n                />\r\n              )}\r\n              <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                  <h4>{this.state.selectedPlace.name}</h4>\r\n                </div>\r\n              </InfoWindow>\r\n            </CurrentLocation>\r\n            <BottomNav>\r\n              <AccountIcon>\r\n                <ProfileButton />\r\n                {/* <img src={accSVG} /> */}\r\n              </AccountIcon>\r\n              <ScanButtonBottomNav>\r\n                <img src={scanSVG} />\r\n                <ScanBottomNavTxt>SCAN</ScanBottomNavTxt>\r\n              </ScanButtonBottomNav>\r\n              <HelpIcon>\r\n                <img src={helpSVG} />\r\n              </HelpIcon>\r\n            </BottomNav>\r\n            {this.state.showingInfoWindow ? (\r\n              <PanelStyles\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <img\r\n                  src={close}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showingInfoWindow: false,\r\n                      activeMarker: null,\r\n                    })\r\n                  }\r\n                />\r\n                <AvailabilityTxt>\r\n                  {this.state.selectedPlace.availability}\r\n                </AvailabilityTxt>\r\n                <LocationName>{this.state.selectedPlace.name}</LocationName>\r\n                <PriceTxt>{this.state.selectedPlace.price}</PriceTxt>\r\n\r\n                <AmenitiesLayout>\r\n                  <AmenityName>{this.state.selectedPlace.title}</AmenityName>\r\n                </AmenitiesLayout>\r\n\r\n                <center>\r\n                  <ScanButton>\r\n                    <ScanButtonTxt>Scan to unlock</ScanButtonTxt>\r\n                  </ScanButton>\r\n                </center>\r\n              </PanelStyles>\r\n            ) : null}\r\n            {/* Populating markers from marker list, allows for multiple markers */}\r\n            {/* What shows up in the window on marker click */}\r\n          </MainLayout>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// API Keys\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\",\r\n})(MapContainer);\r\n\r\n//Run App (not using it rn - may need it later)\r\n// function App() {\r\n\r\n//   return (\r\n//     //Renders the panel and the map\r\n//      <div className=\"panel_map\">\r\n//        <Panel className=\"panel\" header=\"Panel title\">\r\n//          <p>HELLO WORLD</p>\r\n//         </Panel>\r\n\r\n//       <div className=\"map\">\r\n\r\n//       {/* Map API initialization */}\r\n//       <Map\r\n//         google={this.props.google}\r\n//         zoom={14}\r\n//         style={mapStyles}\r\n//         initialCenter={\r\n//           {\r\n//             lat: 41.918060,\r\n//             lng: -87.636990\r\n//           }\r\n//         }\r\n//         >\r\n//        {/* Populating markers from marker list, allows for multiple markers */}\r\n//       {Object.values(markers).map(marker => (\r\n//             <Marker\r\n//               onClick={this.onMarkerClick}\r\n//               position={{ lat: marker.latitude, lng: marker.longitude }}\r\n//               key={marker.id}\r\n//               name={marker.name}\r\n//               title = {marker.amenities}\r\n//             />\r\n//         ))}\r\n//         {/* What shows up in the window on marker click */}\r\n//         <InfoWindow\r\n//           marker={this.state.activeMarker}\r\n//           visible={this.state.showingInfoWindow}\r\n//           onClose={this.onClose}\r\n//         >\r\n//           <div>\r\n//             <h4>{this.state.selectedPlace.name}</h4>\r\n//             <h4>{this.state.selectedPlace.title}</h4>\r\n//           </div>\r\n//         </InfoWindow>\r\n//       </Map>\r\n//       </div>\r\n//       </div>\r\n\r\n//     );\r\n// }\r\n\r\n//export default App;\r\n"]},"metadata":{},"sourceType":"module"}