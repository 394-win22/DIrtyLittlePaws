[{"/Users/rikki/Desktop/DIrtyLittlePaws/src/index.js":"1","/Users/rikki/Desktop/DIrtyLittlePaws/src/App.js":"2","/Users/rikki/Desktop/DIrtyLittlePaws/src/reportWebVitals.js":"3","/Users/rikki/Desktop/DIrtyLittlePaws/src/Profile.js":"4","/Users/rikki/Desktop/DIrtyLittlePaws/src/utilities/firebase.js":"5","/Users/rikki/Desktop/DIrtyLittlePaws/src/Map.js":"6","/Users/rikki/Desktop/DIrtyLittlePaws/src/styles/mapstyles.js":"7"},{"size":457,"mtime":1645759404932,"results":"8","hashOfConfig":"9"},{"size":11309,"mtime":1645767879313,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1645759404932,"results":"11","hashOfConfig":"9"},{"size":3664,"mtime":1645767672707,"results":"12","hashOfConfig":"9"},{"size":1544,"mtime":1645766893726,"results":"13","hashOfConfig":"9"},{"size":3930,"mtime":1645768172226,"results":"14","hashOfConfig":"9"},{"size":3648,"mtime":1645768428471,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"vbqmdd",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rikki/Desktop/DIrtyLittlePaws/src/index.js",[],[],["41","42"],"/Users/rikki/Desktop/DIrtyLittlePaws/src/App.js",[],[],["43","44"],"/Users/rikki/Desktop/DIrtyLittlePaws/src/reportWebVitals.js",[],[],"/Users/rikki/Desktop/DIrtyLittlePaws/src/Profile.js",["45","46","47"],[],"import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MapContainer from \"./App\";\nimport { MainLayout,PanelStyles} from \"./styles/mapstyles\";\nimport backSVG from \"../src/styles/svgs/Vector.svg\";\nimport { pushToFirebase } from \"./utilities/firebase\";\nimport { useState, useEffect} from \"react\";\n// const renderUserProfile = (user) => {\n//   return (\n//     <div>\n//       <div>\n//         <img src={user.photoURL} alt={\"photoURL\"} />\n//       </div>\n//       <div>Name: {user.displayName}</div>\n//       <div>Email: {user.email}</div>\n//     </div>\n//   );\n// };\n\n\n\nexport const Profile = ({ user }) => {\n  \n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {};\n  //   }\n\n  //   (\n  //     <div>\n  // <div>\n  //   <img\n  //     src={this.state.currentUser.photoURL}\n  //     alt={\"photoURL\"}\n  //   />\n  // </div>\n  //       <div>Name: {this.state.currentUser.displayName}</div>\n  //       <div>Email: {this.state.currentUser.email}</div>\n\n  //       <button className=\"btn\" onClick={() => auth.signOut()}>\n  //         Sign Out\n  //       </button>\n  //     </div>\n  //   )\n  const [address, setAddress] = useState(\"\");\n  const [dogname, setDogname] = useState(\"\");\n  const [payment, setPayment] = useState(\"\");\n\n  const update = ({address,dogname, payment, user}) => {\n    // setAddress(address)\n    const infox = {\n      name: user.displayName,\n      email: user.email,\n      img: user.photoURL,\n      address: address,\n      dogname: dogname,\n      payment: payment,\n    };\n    // console.log(`Update ${address}`)\n    const id = Math.round(Math.random() * 100000);\n    const newInfo = { id, ...infox };\n    pushToFirebase(newInfo, user);\n  };\n\n  return (\n    <MainLayout>\n    {/* <PanelStyles> */}\n      <div id=\"pp\">\n        {/* <button\n          onClick={() =>\n            ReactDOM.render(<MapContainer />, document.getElementById(\"root\"))\n          }\n        >\n          Back\n        </button> */}\n\n\n        <div id=\"accountDetail\"></div>\n\n\n        <div className=\"details\">\n\n          <div id=\"left\">\n          <input\n            type=\"image\"\n            alt={\"backSVG\"}\n            src={backSVG}\n            name=\"saveForm\"\n            className=\"btTxt submit\"\n            onClick={() =>\n              ReactDOM.render(<MapContainer />, document.getElementById(\"root\"))\n            }\n          ></input>\n            <div id=\"profpic\">\n            <div>\n              <img src={user.photoURL} alt={\"photoURL\"} />\n            </div>\n          </div>\n            <p>Name: {user.displayName}</p>\n            <p>Email: {user.email}</p>\n            <p>Dog's Name: {dogname} </p>\n                <input value={dogname} onChange = {(e) => setDogname(e.target.value)} placeholder=\"Enter your dog's name\"/>\n                <input type=\"submit\" value={\"submit\"} onClick = {()=>update({address,dogname, payment, user})} /> \n            <p>Address: {address}</p>\n                <input value={address} onChange = {(e) => setAddress(e.target.value)} placeholder=\"Enter your address\"/>\n\n                <input type=\"submit\" value={\"submit\"} onClick = {()=>update({address,dogname, payment, user})} />\n            <p> Payment: {payment}</p>\n               <input value={payment} onChange = {(e) => setPayment(e.target.value)} placeholder=\"Enter your payment method\"/>\n\n                <input type=\"submit\" value={\"submit\"} onClick = {()=>update({address,dogname, payment, user})} />\n          </div>\n          \n          {/* <div id=\"ic\">\n            <i className=\"fa-solid fa-caret-right\"></i>\n          </div> */}\n        </div>\n      </div>\n    {/* </PanelStyles> */}\n    </MainLayout>\n  );\n};\n\nexport default Profile;\n","/Users/rikki/Desktop/DIrtyLittlePaws/src/utilities/firebase.js",[],[],"/Users/rikki/Desktop/DIrtyLittlePaws/src/Map.js",["48","49"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  HomeIcon,\n  MapLayout,\n} from \"./styles/mapstyles\";\nimport locationSVG from \"../src/styles/svgs/CenterLocation.svg\";\nimport homeSVG from \"../src/styles/svgs/home.svg\";\n\nconst mapStyles = {\n  map: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n};\n\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng,\n      },\n      zoomLevel: 14,\n    };\n  }\n\n  FavoritePosition() {\n    const map = this.map;\n    // const current = this.state.currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n\n    const pos = {\n      lat: 41.879463,\n      lng: -87.628461,\n    };\n\n    let center = new maps.LatLng(pos.lat, pos.lng);\n    map.panTo(center);\n\n    //this.props.google.maps.setCenter(pos);\n  }\n\n  ChangeZoom() {\n    // const map = this.map;\n    // const current = this.state.currentLocation;\n    // const google = this.props.google;\n    // const maps = google.maps;\n\n    this.setState({\n      zoomLevel: 13,\n    });\n\n    this.loadMap();\n\n    //this.props.google.maps.setCenter(pos);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((pos) => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude,\n            },\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      // let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: this.state.zoomLevel,\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, (c) => {\n      if (!c) return;\n\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation,\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n\n    return (\n      <>\n      <HomeIcon>\n        \n        <img src = {locationSVG} type=\"button\" onClick={() => this.ChangeZoom()}/>\n        <img src = {homeSVG} type=\"button\" onClick={() => this.FavoritePosition()}/>\n      </HomeIcon>\n        <MapLayout>\n          <div style={style} ref=\"map\">\n            Loading map...\n          </div>\n          {this.renderChildren()}\n        </MapLayout>\n      </>\n    );\n  }\n}\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 41.91807726393084,\n    lng: -87.65872153719155,\n  },\n  centerAroundCurrentLocation: false,\n  visible: true,\n};\n\nexport default CurrentLocation;\n","/Users/rikki/Desktop/DIrtyLittlePaws/src/styles/mapstyles.js",[],[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":4,"column":21,"nodeType":"58","messageId":"59","endLine":4,"endColumn":32},{"ruleId":"56","severity":1,"message":"61","line":7,"column":20,"nodeType":"58","messageId":"59","endLine":7,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":152,"column":9,"nodeType":"64","endLine":152,"endColumn":83},{"ruleId":"62","severity":1,"message":"63","line":153,"column":9,"nodeType":"64","endLine":153,"endColumn":85},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'PanelStyles' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]